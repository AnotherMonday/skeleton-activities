root = true

# AV2400(1)
# Don't use tabs for indentation.
[*]
indent_style = space

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4
max_line_length = 130

# Dotnet code style settings:
[*.{cs,vb}]
# Sort using and Import directives with System.* appearing first
# AV2402(3)
dotnet_sort_system_directives_first = true

# Avoid "this." and "Me." if not necessary
# AV1251(1)
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#this_and_me
dotnet_style_qualification_for_field = false:error
dotnet_style_qualification_for_property = false:error
dotnet_style_qualification_for_method = false:error
dotnet_style_qualification_for_event = false:error

# Use language keywords instead of framework type names for type references
# AV2201(1)
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#language_keyword
dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_predefined_type_for_member_access = true:error

# Modifier preferences
# AV2406(1)
csharp_preferred_modifier_order = private,protected,internal,public,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:error

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:error
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:error
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:error

# Organize usings
# AV2402(3)
dotnet_separate_import_directive_groups = true

# Only use "var" if type is obvious
# AV152(1)
csharp_style_var_for_built_in_types = false:error
csharp_style_var_elsewhere = false:error

# Newline settings
# AV2400(1)
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true

# Spacing
# AV2400(1)
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_parentheses = false

#### Naming styles ####

# Naming rules

dotnet_naming_rule.namespace_should_be_pascalcase.severity = warning
dotnet_naming_rule.namespace_should_be_pascalcase.symbols = namespace
dotnet_naming_rule.namespace_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.interface_should_be_interface.severity = warning
dotnet_naming_rule.interface_should_be_interface.symbols = interface
dotnet_naming_rule.interface_should_be_interface.style = interface

dotnet_naming_rule.type_should_be_pascalcase.severity = warning
dotnet_naming_rule.type_should_be_pascalcase.symbols = type
dotnet_naming_rule.type_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.async_method_should_be_async_method.severity = warning
dotnet_naming_rule.async_method_should_be_async_method.symbols = async_method
dotnet_naming_rule.async_method_should_be_async_method.style = async_method

dotnet_naming_rule.async_local_function_should_be_async_method.severity = warning
dotnet_naming_rule.async_local_function_should_be_async_method.symbols = async_local_function
dotnet_naming_rule.async_local_function_should_be_async_method.style = async_method

dotnet_naming_rule.method_should_be_pascalcase.severity = warning
dotnet_naming_rule.method_should_be_pascalcase.symbols = method
dotnet_naming_rule.method_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.local_function_should_be_pascalcase.severity = warning
dotnet_naming_rule.local_function_should_be_pascalcase.symbols = local_function
dotnet_naming_rule.local_function_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.parameter_should_be_camelcase.severity = warning
dotnet_naming_rule.parameter_should_be_camelcase.symbols = parameter
dotnet_naming_rule.parameter_should_be_camelcase.style = camelcase

dotnet_naming_rule.type_parameter_should_be_type_parameter.severity = warning
dotnet_naming_rule.type_parameter_should_be_type_parameter.symbols = type_parameter
dotnet_naming_rule.type_parameter_should_be_type_parameter.style = type_parameter

dotnet_naming_rule.static_readonly_field_should_be_pascalcase.severity = warning
dotnet_naming_rule.static_readonly_field_should_be_pascalcase.symbols = static_readonly_field
dotnet_naming_rule.static_readonly_field_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.const_should_be_pascalcase.severity = warning
dotnet_naming_rule.const_should_be_pascalcase.symbols = const
dotnet_naming_rule.const_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.public_field_should_be_pascalcase.severity = warning
dotnet_naming_rule.public_field_should_be_pascalcase.symbols = public_field
dotnet_naming_rule.public_field_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.non_public_field_should_be__camelcase.severity = warning
dotnet_naming_rule.non_public_field_should_be__camelcase.symbols = non_public_field
dotnet_naming_rule.non_public_field_should_be__camelcase.style = _camelcase

dotnet_naming_rule.event_should_be_pascalcase.severity = warning
dotnet_naming_rule.event_should_be_pascalcase.symbols = event
dotnet_naming_rule.event_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.property_should_be_pascalcase.severity = warning
dotnet_naming_rule.property_should_be_pascalcase.symbols = property
dotnet_naming_rule.property_should_be_pascalcase.style = pascalcase

dotnet_naming_rule.local_variables_should_be_camelcase.severity = warning
dotnet_naming_rule.local_variables_should_be_camelcase.symbols = local_variables
dotnet_naming_rule.local_variables_should_be_camelcase.style = camelcase

# Symbol specifications

dotnet_naming_symbols.namespace.applicable_kinds = namespace
dotnet_naming_symbols.namespace.applicable_accessibilities =
dotnet_naming_symbols.namespace.required_modifiers =

dotnet_naming_symbols.type.applicable_kinds = class, struct, enum, delegate
dotnet_naming_symbols.type.applicable_accessibilities = *
dotnet_naming_symbols.type.required_modifiers =

dotnet_naming_symbols.method.applicable_kinds = method
dotnet_naming_symbols.method.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.method.required_modifiers =

dotnet_naming_symbols.async_method.applicable_kinds = method
dotnet_naming_symbols.async_method.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.async_method.required_modifiers = async

dotnet_naming_symbols.parameter.applicable_kinds = parameter
dotnet_naming_symbols.parameter.applicable_accessibilities =
dotnet_naming_symbols.parameter.required_modifiers =

dotnet_naming_symbols.type_parameter.applicable_kinds = type_parameter
dotnet_naming_symbols.type_parameter.applicable_accessibilities =
dotnet_naming_symbols.type_parameter.required_modifiers =

dotnet_naming_symbols.local_function.applicable_kinds = local_function
dotnet_naming_symbols.local_function.applicable_accessibilities = *
dotnet_naming_symbols.local_function.required_modifiers =

dotnet_naming_symbols.async_local_function.applicable_kinds = local_function
dotnet_naming_symbols.async_local_function.applicable_accessibilities = *
dotnet_naming_symbols.async_local_function.required_modifiers = async

dotnet_naming_symbols.public_field.applicable_kinds = field
dotnet_naming_symbols.public_field.applicable_accessibilities = public, internal, protected, protected_internal
dotnet_naming_symbols.public_field.required_modifiers =

dotnet_naming_symbols.non_public_field.applicable_kinds = field
dotnet_naming_symbols.non_public_field.applicable_accessibilities = private, private_protected
dotnet_naming_symbols.non_public_field.required_modifiers =

dotnet_naming_symbols.const.applicable_kinds = field, local
dotnet_naming_symbols.const.applicable_accessibilities = *
dotnet_naming_symbols.const.required_modifiers = const

dotnet_naming_symbols.static_readonly_field.applicable_kinds = field
dotnet_naming_symbols.static_readonly_field.applicable_accessibilities = *
dotnet_naming_symbols.static_readonly_field.required_modifiers = readonly, static

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = *
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.event.applicable_kinds = event
dotnet_naming_symbols.event.applicable_accessibilities = *
dotnet_naming_symbols.event.required_modifiers =

dotnet_naming_symbols.property.applicable_kinds = property
dotnet_naming_symbols.property.applicable_accessibilities = *
dotnet_naming_symbols.property.required_modifiers =

dotnet_naming_symbols.local_variables.applicable_kinds = local
dotnet_naming_symbols.local_variables.applicable_accessibilities = *
dotnet_naming_symbols.local_variables.required_modifiers =

# Naming styles

dotnet_naming_style.pascalcase.required_prefix =
dotnet_naming_style.pascalcase.required_suffix =
dotnet_naming_style.pascalcase.word_separator =
dotnet_naming_style.pascalcase.capitalization = pascal_case

dotnet_naming_style._camelcase.required_prefix = _
dotnet_naming_style._camelcase.required_suffix =
dotnet_naming_style._camelcase.word_separator =
dotnet_naming_style._camelcase.capitalization = camel_case

dotnet_naming_style.camelcase.required_prefix =
dotnet_naming_style.camelcase.required_suffix =
dotnet_naming_style.camelcase.word_separator =
dotnet_naming_style.camelcase.capitalization = camel_case

dotnet_naming_style.interface.required_prefix = I
dotnet_naming_style.interface.required_suffix =
dotnet_naming_style.interface.word_separator =
dotnet_naming_style.interface.capitalization = pascal_case

dotnet_naming_style.type_parameter.required_prefix = T
dotnet_naming_style.type_parameter.required_suffix =
dotnet_naming_style.type_parameter.word_separator =
dotnet_naming_style.type_parameter.capitalization = pascal_case

dotnet_naming_style.async_method.required_prefix =
dotnet_naming_style.async_method.required_suffix = Async
dotnet_naming_style.async_method.word_separator =
dotnet_naming_style.async_method.capitalization = pascal_case

[*.{xml,xaml,config,props,targets,csproj,vbproj,json,user}]
indent_style = space
indent_size = 2
